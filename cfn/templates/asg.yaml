AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ProjectName:
    Type: String
    Description: Name for this project; e.g. downtime-notifier, dynamodb-scaler

  EnvironmentName:
    Type: String
    Description: Name for this environment; e.g. development, staging, production

  VpcExportIdentifier:
    Type: String

  SubnetAZ0ExportIdentifier:
    Type: String

  SubnetAZ1ExportIdentifier:
    Type: String

  GitRepo:
    Type: String

  KeypairName:
    Type: AWS::EC2::KeyPair::KeyName

  AmiId:
    Type: AWS::EC2::Image::Id

  InstanceType:
    Type: String
    Description: The size of the instance


Resources:
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: 'PermitAssumeRoleEc2'
            Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
      Path: /
      Policies:
        - PolicyName: curate-permissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sts:AssumeRole"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "sqs:ChangeMessageVisibility"
                  - "sqs:ChangeMessageVisibilityBatch"
                  - "sqs:DeleteMessage"
                  - "sqs:DeleteMessageBatch"
                  - "sqs:ReceiveMessage"
                Resource:
                  "Fn::ImportValue":
                    "Fn::Join":
                      - "-"
                      - - { Ref: ProjectName }
                        - { Ref: EnvironmentName }
                        - queue
                        - arn
              - Effect: Allow
                Action:
                  - athena:GetQueryExecution
                  - athena:GetQueryResults
                  - athena:RunQuery
                  - athena:StartQueryExecution
                  - glue:CreateDatabase
                  - glue:CreateTable
                  - glue:GetDatabase
                  - glue:GetTable
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:ListMultipartUploadParts
                  - s3:AbortMultipartUpload
                  - s3:CreateBucket
                  - s3:PutObject
                Resource:
                  - "arn:aws:s3:::aws-athena-query-results-*"
              - Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:ListObjects
                  - s3:PutObject
                Resource:
                  - "Fn::ImportValue":
                      "Fn::Join":
                        - "-"
                        - - { Ref: ProjectName }
                          - { Ref: EnvironmentName }
                          - bucket
                          - arn
                  - "Fn::Join":
                    - ""
                    - - "Fn::ImportValue":
                          "Fn::Join":
                            - "-"
                            - - { Ref: ProjectName }
                              - { Ref: EnvironmentName }
                              - bucket
                              - arn
                      - "/*"
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource:
                  - "Fn::Join":
                    - ""
                    - - "arn:aws:logs:"
                      - { Ref: "AWS::Region" }
                      - ":"
                      - { Ref: "AWS::AccountId" }
                      - ":log-group:curate:*"

  IamProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: IamRole

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        "Fn::ImportValue": { Ref: VpcExportIdentifier }
      GroupDescription:
        "Fn::Join":
          - "-"
          - - { Ref: ProjectName }
            - { Ref: EnvironmentName }
            - "sg"
      Tags:
        - Key: Name
          Value:
            "Fn::Join":
              - "-"
              - - { Ref: ProjectName }
                - { Ref: EnvironmentName }
                - "sg"

  SecurityGroupSshIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: { Ref: SecurityGroup }
      CidrIp: "0.0.0.0/0"
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: { Ref: AmiId }
      KeyName: { Ref: KeypairName }
      IamInstanceProfile: { Ref: IamProfile }
      InstanceType: { Ref: InstanceType }
      SecurityGroups:
        - { Ref: SecurityGroup }
      UserData:
        "Fn::Base64":
          "Fn::Sub":
            - |-
              #!/bin/bash
              yum update -y
              yum install -y git sl gcc mysql
              git clone ${git_repo} repo
              cd repo
              echo ./bin/processor --sqs-queue ${sqs_queue}
            - git_repo: { Ref: GitRepo }
              sqs_queue:
                "Fn::ImportValue":
                  "Fn::Join":
                    - "-"
                    - - { Ref: ProjectName }
                      - { Ref: EnvironmentName }
                      - queue
                      - url


  Asg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Tags:
        - Key: Name
          Value:
            "Fn::Join":
              - "-"
              - - { Ref: ProjectName }
                - { Ref: EnvironmentName }
                - "asg"
                - "instance"
          PropagateAtLaunch: true

      MinSize: 1
      MaxSize: 1
      LaunchConfigurationName: { Ref: LaunchConfig }
      VPCZoneIdentifier:
        - "Fn::ImportValue": { Ref: SubnetAZ0ExportIdentifier }
        - "Fn::ImportValue": { Ref: SubnetAZ1ExportIdentifier }

Outputs:
  SgIdExport:
    Value: { Ref: SecurityGroup }
    Export:
      Name:
        "Fn::Join":
          - "-"
          - - { Ref: ProjectName }
            - { Ref: EnvironmentName }
            - "SgId"
